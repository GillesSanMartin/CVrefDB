% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Misc.R
\name{F_score}
\alias{F_score}
\title{Function to compute Recall (R), Precision (P) and F-score (F) for each taxon}
\usage{
F_score(taxon_true, taxon_predicted, predicted_NA_wrong = FALSE)
}
\arguments{
\item{taxon_true}{A character vector with the true taxon}

\item{taxon_predicted}{A character vector with the corresponding assigned/predicted taxon}

\item{predicted_NA_wrong}{A logical. If TRUE : the unassigned taxa
(ie with missing values) will be considered as not correctly identified.
Imagine you have 3 sequences, 1 assignment is correct, 1 is incorrect and
1 is NA (no assignment). If predicted_NA_wrong = FALSE, we compute the
proportion of correct prediction as 1/2 (the NA is ignored).
If predicted_NA_wrong = TRUE, we compute the
proportion of correct prediction as 1/3 (the NA is counted in the total.
This is not an incorrect assignment but the assignment is still unsuccessful).}
}
\value{
a data.frame with for each taxon the F-score (F), Recall (R) and Precision (P)
and the number of sequences used to compute R (Rnb) and P (Pnb)
}
\description{
When we don't take all sequences into account, there are several ways to compute the
\% of correctly identified sequences :
\itemize{
\item P = Precision = \% of taxon_predicted which is correct \code{P = TP/(TP+FP)}
\item R = Recall = \% of taxon_true for which the prediction is correct \code{R = TP/(TP+FN)}
\item F = \code{F-score} = harmonic mean of F and P \code{F = 2*P*R/(P+R)}
}
}
\details{
The problem is that there are in fact several ways to combine these values
to obtain a global estimates.

For example we can compute F, R and P for each species and genus and then
compute their average for each family to obtain a global estimate of the
the prediction quality at at the genus and species level for each family.
The difficulty with this approach is that there are lots of NAs and 0
(for example is a genus is never assigned, its Precision will be NA) and it
is difficult to choose how to combine them. This typically occurs in species
poorly represented in the database and can have a huge influence on the results.

Another possibility (not available with this function)
is to compute R and F across all sequences for
each family. Eg for each family we compute the \% of sequences corresponding to
the genus of each family to be correctly predicted (Recall) or the \% of sequences
that are correctly predicted to be a genus of each family (Precision).
We can then compute their harmonic mean to obtain the F score.
NB : with this approach all metrics (Recall, Precision and F score) are almost
identical and can therefore be interpreted as a \% of correct predictions.
This is also a lot more complex to compute.

The function\code{\link[=score_per_taxon]{score_per_taxon()}} provides yet another (more simple) approach.
Seee in particular the examples of this function's help for a comparion of the
outputs provided by F_score() and score_per_taxon().
}
\examples{

# retrieve path to two example datasets
fasta_path <- system.file("extdata/ITS2_Rosales_Restricted.fasta",
                          package = "CVrefDB")
taxonomy_path <- system.file("extdata/ITS2_Rosales_Restricted.tsv",
                             package = "CVrefDB")

# Read the fasta and tsv files
fasta <- Biostrings::readDNAStringSet(fasta_path)
reftaxo <- read.table(taxonomy_path, sep = "\t", header = TRUE)

# Cross validate and imput taxonomies with 4 methods
output_leakedCV <- CV_blastn(fasta_db = fasta, taxo = reftaxo,
                             k = 10, seed = 12, verbose = TRUE)
assigned_long <- assign_taxonomy(output_leakedCV, taxo = reftaxo, Order = NA)

# Recall, Precision and F-score for TopHitPlus method and family level
tmp <- assigned_long[assigned_long$Method == "TopHitPlus" &
                         assigned_long$Tax_level == "Family",]
F_score(taxon_predicted = tmp$Taxon, taxon_true = tmp$Taxon_true)

# Compute these statistics for the 4 methods and all taxonomic levels
# Note that in many cases we have NAs or evn 0 values that are poorly exploitable
# due eg to the limited number of sequences
library(tidyr)
library(dplyr)
metrics <-
    assigned_long \%>\%
    mutate(Taxon = replace(Taxon, Taxon == "", NA)) \%>\%
    group_by(Method, Tax_level) \%>\%
    nest() \%>\%
    mutate(F_score = lapply(data, function(x) {
        F_score(taxon_true = x$Taxon_true,
                taxon_predicted = x$Taxon,
                predicted_NA_wrong = TRUE)
    })) \%>\%
    select(-data) \%>\%
    unnest(F_score) \%>\%
    ungroup()

metrics \%>\%
    slice(1:15)
}
