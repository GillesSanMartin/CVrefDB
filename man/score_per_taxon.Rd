% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Misc.R
\name{score_per_taxon}
\alias{score_per_taxon}
\title{Calculate a score (\% of correctly identified sequences) per taxon}
\usage{
score_per_taxon(
  assigned,
  grouping_tax_level = "Family",
  grouping_taxon = "Taxon_true",
  predicted_NA_wrong = FALSE
)
}
\arguments{
\item{assigned}{a data.frame, output form function assign_taxonomy()}

\item{grouping_tax_level}{a character string indicating the taxonomic level to use for grouping
the results. Possible values are :"Kingdom", "Phylum", Class", "Order,
"Family", "Genus", or "Species". Default is "Family". NB : the chosen value
should be present in the \code{Tax_level} column of the \code{assigned} table.
NB : the case is important)}

\item{grouping_taxon}{a character string with only one of two possible values :
\code{Taxon_true} (default) : we will use as grouping taxon the true taxon corresponding to
each sequence.
\code{Taxon} : we will use the predicted/assigned taxon as grouping taxon
(e.g. all sequences predicted to be in a given family will be grouped together).
The results of both options will usually be very similar unless you chose
a \code{grouping_tax_level} at which the error rate is high.}

\item{predicted_NA_wrong}{a logical value indicating whether sequences that were predicted to
be "NA" should be considered as incorrect. Default is FALSE. Empty strings are considered as NAs.
Imagine you have 3 sequences, 1 assignment is correct, 1 is incorrect and
1 is NA (no assignment). If predicted_NA_wrong = FALSE, we compute the
proportion of correct prediction as 1/2 (the NA is ignored).
If predicted_NA_wrong = TRUE, we compute the
proportion of correct prediction as 1/3 (the NA is counted in the total.
This is not an incorrect assignment but the assignment is still unsuccessful)}
}
\value{
a data.frame with 6 columns  :
\itemize{
\item \code{Method} : The assignment method always used as a grouping factor
\item \code{Tax_level} : Taxonomic level (eg if Tax_level = "Genus", Pct represnet the \%
of sequences correctly predicted at genus level).
\item \code{Level} : Taxonomic level code (lower case first letter of \code{Tax_level})
\item \code{Grouping_taxon} : grouping taxon
\item \code{Pct} : \% of of sequences correctly identified for a given grouping taxon at a
given taxonomic level
\item \code{N} : Number of sequences used to compute \code{Pct}.
Excluding NAs if \code{predicted_NA_wrong} = FALSE
and including NAs in the total if \code{predicted_NA_wrong} = TRUE
}
}
\description{
This function calculates a score for each
taxon at a specified taxonomic level (e.g. family), based on the
percentage of sequences that were correctly identified. For example,
if the grouping taxonomic level is "Family", the function will compute
for the sequences of each true family the \% of sequences correctly identified
at the Family, Genus, and Species level.
}
\details{
NB : there are in fact many different ways to compute similar statistics which
will provide results with more or less different results and interpretation.
We chose here a rather simple and straightforward way to proceed. The code
of the function is pretty simple and would be easy to adapt for other use cases.
Computing these values by yourself is probably the best way to be certain
to understand exactly the meaning of the computations...

The question we are asking here with the default values is :
if I know that a group of sequences are
in a given Family (true family), which proportion of these sequences are correctly
identified at the Family, Genus or Species level for each family ?
See the examples for a comparison of the scores computed here and the usual
Recall and Precision scores which are sometimes identical to the output tof
current function and sometimes not...
}
\examples{

# retrieve path to two example datasets
fasta_path <- system.file("extdata/ITS2_Rosales_Restricted.fasta",
                          package = "CVrefDB")
taxonomy_path <- system.file("extdata/ITS2_Rosales_Restricted.tsv",
                             package = "CVrefDB")

# Read the fasta and tsv files
fasta <- Biostrings::readDNAStringSet(fasta_path)
reftaxo <- read.table(taxonomy_path, sep = "\t", header = TRUE)

# Cross validate and input taxonomies with 4 methods
output_leakedCV <- CV_blastn(fasta_db = fasta, taxo = reftaxo,
                             k = 10, seed = 12, verbose = TRUE)
assigned_long <- assign_taxonomy(output_leakedCV, taxo = reftaxo,
                                 Order = NA, Assignation_method = "TopHitPlus")

# Compute the scores per family.

# Interpretation : For the sequences that are known to be in the family Rosaceae (column
# (Grouping_taxon), the \% of sequences correctly predicted (Pct) is 100\%, 93.9\%
# and 7.61\% at Family, genus and species level respectively (Tax_level).
# The \% are based on 460 sequences (column "N")

score_per_taxon(assigned_long, grouping_tax_level = "Family")

# compute the scores per genus and look at the \% of sequences correctly predicted
# at the genus level (for genus with more than 5 sequences available)

per_genus <- score_per_taxon(assigned_long, grouping_tax_level = "Genus")

library(dplyr)
per_genus \%>\%
    filter(Tax_level == "Genus" & N > 5) \%>\%
    arrange(desc(Pct))

# NB : in this particular case (at the genus level), Pct corresponds to the
# statistic usually called "Recall" (R) which can be computed with another function
# of this package : F_score()

tmp <- assigned_long[assigned_long$Tax_level == "Genus", ]
F_score(taxon_true = tmp$Taxon_true,
        taxon_predicted = tmp$Taxon) \%>\%
    filter(Rnb>5) \%>\%
    arrange(desc(R))

# You could compute the equivalent of Precision (P) with the argument grouping_taxon
# set to "Taxon" instead of of the default "Taxon_true"

per_genus_precision <-
    score_per_taxon(assigned_long,
                    grouping_tax_level = "Genus",
                    grouping_taxon = "Taxon")

# show a subset
per_genus_precision \%>\%
    filter(Tax_level == "Genus" & N > 5) \%>\%
    arrange(desc(Pct))

# Compare with column P of F_score()
F_score(taxon_true = tmp$Taxon_true,
        taxon_predicted = tmp$Taxon) \%>\%
    filter(Pnb>5) \%>\%
    arrange(desc(P))

# The whole point of the score_per_taxon() function is that for each of these genus
# it can also provide the \% of correct prediction at the species level and this score
# may differ from what you could compute with F_score() at the species level...
# score_per_taxon() is hierarchical while F_score() is not. F_score() will
# compute the scores for each species independently of the genus in which this species is.

# With score_per_taxon() we can for example compute for each genus the \% of
# sequences correctly identified at the species level :
per_genus \%>\%
    filter(Tax_level == "Species" & N > 5) \%>\%
    arrange(desc(Pct))

# With F_score() you may compute F, R and P for each species and then try to
# aggregate these values at the genus level but it is not straightforward and
# it will often cause problems because of the presence of many NA, NaN or 0
# and it is difficult to decide how to handle these values properly...
tmp <- assigned_long[assigned_long$Tax_level == "Species", ]
F_score(taxon_true = tmp$Taxon_true,
        taxon_predicted = tmp$Taxon) \%>\%
    filter(Rnb>5) \%>\%
    arrange(desc(R))
}
