% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign_taxonomy.R
\name{assign_taxonomy}
\alias{assign_taxonomy}
\title{Assign taxonomy to sequences based on top n blast hits}
\usage{
assign_taxonomy(
  df,
  taxo = NULL,
  Assignation_method = c("TopHit", "TopHitPlus", "TopN", "TopNPlus"),
  Top_n = 10,
  ID = "TaxID_query",
  Ident = "Identity",
  Bit = "Bit_score",
  Length = "Length",
  E = ifelse(any(Assignation_method == "TopNPlus"), "E_value", NA),
  Species = "Species",
  Genus = "Genus",
  Family = "Family",
  Order = "Order",
  Class = NA,
  Phylum = NA,
  Kingdom = NA,
  E_max = 10^-10,
  Length_min = 100,
  Ident_min_s = 97,
  Ident_min_g = 90,
  Ident_min_f = 80,
  Ident_min_o = 70,
  Ident_min_c = 60,
  Ident_min_p = 50,
  Ident_min_k = 40,
  Ident_max_diff_s = 5,
  Ident_max_diff_g = 10,
  Ident_max_diff_f = 20,
  Ident_max_diff_o = 30,
  Ident_max_diff_c = 40,
  Ident_max_diff_p = 50,
  Ident_max_diff_k = 60
)
}
\arguments{
\item{df}{a data frame with the top blastn hits for each query sequence ID
(typically, the output of the function \code{\link[=CV_blastn]{CV_blastn()}}. For each hit, it
should contain 4 blastn statistics (Identity, Length, bit score, E-value)
and a column for each taxonomic level of interest ( e.g. : \code{Species},
\code{Genus}, \code{Family}, \code{Order}, \code{Class}, \code{Phylum}, \code{Kingdom}).}

\item{taxo}{Either a 2-column data.frame with
sequence ID (col 1) and QIIME2 taxonomy (col2) or a a character string
giving the path to a tsv file containing such information (tab separated
text file). This file is optional and can
be used to add the "true" taxon as a supplementary column in the output.
Default is \code{NULL} and then, the output does not contain a "Taxon_true" column.}

\item{Assignation_method}{a character vector with at least one of the
following values: "TopHit", "TopHitPlus", "TopN", "TopNPlus". It specifies
the method used for the assignment (see details). By default, the results
for the 4 methods are provided.}

\item{Top_n}{an integer giving the number of top hits to consider when using
the "TopN" or "TopNPlus" methods and to compute the consensus score (for
all methods). Default is 10.}

\item{ID}{a character string giving the name of the column with the query
taxonomic ID. Default is "TaxID_query".}

\item{Ident}{a character string giving the name of the column containing the
identity. Default is "Identity".}

\item{Bit}{a character string giving the name of the column containing the
bit score. Default is "Bit_score".}

\item{Length}{a character string giving the name of the column containing the
length. Default is "Length". This value is only used by TopNPlus method but
the Length is also displayed in the final output. Its value can also
be set to \code{NA} if "TopNPlus" is not one of the methods (the column Length
in the output is then a column of NAs)}

\item{E}{a character string giving the name of the column containing the
E-value. This parameter is only used with \code{TopNPlus} method.
Default is "E_value" if any of the Methods is \code{TopNPlus} and \code{NA} otherwise.}

\item{Species}{a character string giving the name of the column containing
the species level taxonomic identification. Default is "Species".
Use \code{NA} instead to ignore this level.}

\item{Genus}{a character string giving the name of the column containing the
genus level taxonomic identification. Default is "Genus".
Use \code{NA} instead to ignore this level.}

\item{Family}{a character string giving the name of the column containing the
family level taxonomic identification. Default is "Family".
#'   Use \code{NA} instead to ignore this level.}

\item{Order}{a character string giving the name of the column containing the
order level taxonomic identification. Default is "Order".
Use \code{NA} instead to ignore this level.}

\item{Class}{a character string giving the name of the column containing the
class level taxonomic identification. Default is \code{NA} and the class level
is ignored.}

\item{Phylum}{a character string giving the name of the column containing
the Phylum level taxonomic identification. Default is \code{NA} and the Phylum
level is ignored.}

\item{Kingdom}{a character string giving the name of the column containing
the kingdom level taxonomic identification. Default is \code{NA} and the kingdom
level is ignored.}

\item{E_max}{a numeric giving the maximum E-value to consider when using the
"TopNPlus" method. Default is \code{10^-10}.}

\item{Length_min}{an integer giving the minimum length to consider when using
the "TopNPlus" method. Default is 100.}

\item{Ident_min_s}{a numeric giving the minimum identity for the species
level to consider when using the "TopNPlus" method. Default is 97.}

\item{Ident_min_g}{a numeric giving the minimum identity for the genus level
to consider when using the "TopNPlus" method. Default is 90.}

\item{Ident_min_f}{a numeric giving the minimum identity for the family level
to consider when using the "TopNPlus" method. Default is 80.}

\item{Ident_min_o}{a numeric giving the minimum identity for the order level
to consider when using the "TopNPlus" method. Default is 70.}

\item{Ident_min_c}{a numeric giving the minimum identity for the class level
to consider when using the "TopNPlus" method. Default is 60.}

\item{Ident_min_p}{a numeric giving the minimum identity for the Phylum
level to consider when using the "TopNPlus" method. Default is 50.}

\item{Ident_min_k}{a numeric giving the minimum identity for the kingdom
level to consider when using the "TopNPlus" method. Default is 40.}

\item{Ident_max_diff_s}{Minimum difference between the best identity and the
identity of each hit when using the "TopNPlus" method. A different value
can be used for each taxonomic level (cf next parameters). If Identity of
best Bit score is 97\% and Ident_max_diff_s = 5, we will consider only
Identities > 92\% for the species level identifications. Default is 5.}

\item{Ident_max_diff_g}{same as \code{Ident_max_diff_s} for the genus level.
Default is 10}

\item{Ident_max_diff_f}{same as \code{Ident_max_diff_s} for the family level.
Default is 20}

\item{Ident_max_diff_o}{same as \code{Ident_max_diff_s} for the order level.
Default is 30}

\item{Ident_max_diff_c}{same as \code{Ident_max_diff_s} for the class level.
Default is 40}

\item{Ident_max_diff_p}{same as \code{Ident_max_diff_s} for the Phylum level.
Default is 50}

\item{Ident_max_diff_k}{same as \code{Ident_max_diff_s} for the kingdom level.
Default is 60}
}
\value{
A table with the following columns :
\itemize{
\item Method : assignment method
used (TopHit, TopHitPlus, TopN, TopNPlus)
\item Tax_level : the taxonomic level of the prediction (eg Family, Genus,
Species,...)
\item Level : an abreviated version using the forst letter of the taxonomic
level (f = Family, g = genus, s = species,...)
\item ID : the ID of the query sequence
\item Taxon : the assigned (predicted) taxon for that sequence ID at that
taxonomic level.
\item Bit : Bit score of the assigned taxon
\item Length : Length of the alignment corresponding to the assigned taxon
\item Ident : Identity score (\%) of the assigned taxon
\item Cons : Consensus score of the assigned taxon (\% of blastn hits agreeing
on that taxon among the \code{Top_n} top hits)
\item Taxon_true : This column will be present only when \code{taxo} is not NULL.
It contains the "true" taxon associated with this sequence ID according to
the original reference database.
}
}
\description{
This function allows to assign a taxonomy to sequences based on their top
blastn hits. It can use different methods for the assignment based on the bit
score, the consensus score and it allows optionally to specify the minimum
identity, length and E-value to take into consideration for each taxonomic
level. The output contains a taxonomic assignment for each taxonomic level
(Species, genus, family,...) and identity and consensus scores that can be
used to decide to dismiss untrustworthy identifications.
}
\details{
This function assigns a taxonomy for each query sequence and each requested.
taxonomic level. I.e. for a given sequence, you will get a proposed
identification for the family level, the genus level, the species level,...
For each assignment, the function also provides several statistics to help
you assess the reliability of the assignment, in particular, the Identity
score and the Consensus score (both expressed as \%).

The Identity score (\%), directly provided by blast, gives the \% of base pairs
(bp) that are identical between the target sequence and the sequence matched
in the reference database. Once a taxon is assigned, we attribute the
Identity score corresponding to the maximum bit score for this taxon. NB :
this is not necessarily the maximum identity score because the bit score
penalizes matches with low values for alignment length (i.e. it is better to
have 98\% of Identity with a 400 pb alignment length than to have 100\%
identity with a 50 pb alignment length. . . In such a case, 98\% will be the
identity score assigned to the taxon.).

The Consensus score is simply the \% of the 10 top hits (by default) matching the same taxon.
If among the top 10 hits, blast matches 2 Brassica napus, 6 Brassica nigra
and 2 Sinapis alba, the consensus score is 60\% for Brassica nigra,
80\% for the genus Brassica and 100\% for the family Brassicaceae.

Four different methods can be chosen :
\itemize{
\item \code{TopHit} : we simply assign the taxon with the best Bit score (default blast
output if we keep only 1 match).
\item \code{TopHitPlus} : we also choose the taxon with the best bit score but we
break the potential ties by choosing the taxon with the highest consensus
score among the ties.
\item \code{TopN} : we choose among the top 10 hits (by defaults \code{Top_n = 10}),
the taxon with the highest  consensus score at each taxonomic level.
With this approach the chosen species might be in a different genus
than the taxon chosen at the genus level for example.
\item \code{TopNPlus} : we first eliminate the sequences which do not fulfill some
predefined requirements, then we compute the consensus score and choose the
taxon with the highest consensus score at each taxonomic level. With defaults
values, we eliminate the matched sequences with a length < 100 base pairs
(\code{Length_min = 100}) and with an E score > 10^-10 (\code{E_max = 10^-10}). The
identity score must also be at least 97\% for the species level
(\code{Ident_min_s = 97}), 90\% for the genus level (\code{Ident_min_g = 90}), 80\% for the family
level (\code{Ident_min_f = 80}),... Also the difference of identity score between
the best hit and the matched sequence must be <5\% for the Species level
(\verb{Ident_max_diff_s = 5\%}), 10\% for the genus level (\verb{Ident_max_diff_g = 10\%}),
20\% for the family level (\verb{Ident_max_diff_g = 20\%}),...
(approach inspired e.g. by Milla et al.(2022) and
\url{https://github.com/Joseph7e/Assign-Taxonomy-with-BLAST}
}
}
\examples{

library(dplyr)
library(tidyr)

# 1. Example with a fake dataset

# Fake top 15 blast hits for a sequence corresponding to Scirpoides holoschoenus
# and inspired by a real life example where the 4 assignment methods give
# different results

example_top15_blast_hits <-
    data.frame(
        TaxID_query = "ID001",
        Species_true = "Scirpoides holoschoenus",

        Bit_score = c(1075,704,682,651,630,630,549,549,529,525,525,520,520,518,512),
        Length = c(589,607,608,595,597,597,568,568,570,541,571,616,609,569,569),
        Identity = c(99.660,88.138,87.500,86.891,86.265,86.265,84.683,84.507,83.860,
                     84.843,83.713,82.630,82.594,83.480,83.304),
        E_value = 10^-14,

        Phylum = "Streptophyta",
        Class = "Magnoliopsida",
        Order = "Poales",
        Family = "Cyperaceae",
        Genus = c("Scirpoides","Erioscirpus","Erioscirpus","Dracoscirpoides",
                  "Dracoscirpoides","Dracoscirpoides", "Cyperus","Cyperus","Cyperus",
                  "Cyperus","Cyperus","Cyperus","Cyperus","Cyperus","Cyperus"),
        Species = c("Scirpoides holoschoenus","Erioscirpus microstachyus",
                    "Erioscirpus comosus", "Dracoscirpoides ficinioides",
                    "Dracoscirpoides falsa", "Dracoscirpoides falsa",
                    "Cyperus pulchellus", "Cyperus leucocephalus"," Cyperus haspan",
                    "Cyperus spiralis", "Cyperus flaccidus", "Cyperus sp.",
                    "Cyperus diffusus", "Cyperus tenuispica", "Cyperus haspan")
    )

# corresponding true taxonomy
example_taxonomy <-
data.frame(ID = "ID001",
Taxo = "k__Viridiplantae; p__Streptophyta; c__Magnoliopsida; o__Poales; f__Cyperaceae; g__Scirpoides; s__holoschoenus")


# Assign the taxonomy with mostly default options and in "long" format

tax_pred <-
    assign_taxonomy(df = example_top15_blast_hits,
                    taxo = example_taxonomy,
                    Order = NA, Family = NA) # ignore the family and genus levels
tax_pred


# Present the same data in a different, wider, format

tax_pred \%>\%
    select(-c(Bit, Length)) \%>\%
    pivot_assign_taxonomy()




# change some of the many available options
tax_pred <-
    assign_taxonomy(df = example_top15_blast_hits,
                    taxo = example_taxonomy,
                    # use only the TopHitPlus and TopNPlus methods
                    Assignation_method = c("TopHitPlus", "TopNPlus"),
                    # use the top 15 blast hits instead of the default 10
                    Top_n = 15,
                    # change the defaults for TopNPlus
                    Ident_min_s = 80, Ident_max_diff_s = 20,
                    # Consider also the Phylum and Class level by indicating the
                    # name of the columns containing this information
                    Class = "Class", Phylum = "Phylum"
    )
tax_pred



# ----------------------------------------------

# 2 Example on a real dataset

# Retrieve an example reference database (fasta file) and its corresponding
# taxonomic information from the package data examples.
# This example contains >7000 sequences for the ITS2 barcode of plants from the
# order "Rosales" restricted to a portion of the gene amplified by a given
# given primer used in metabarcoding.
#
# Remember that the taxonomy file MUST be a tab separated text file with 2 columns :
# col 1 = sequences IDs used in the fasta file, col 2 = full taxonomy in QIIME2 format

fasta_path <- system.file("extdata/ITS2_Rosales_Restricted.fasta",
                          package = "CVrefDB")
taxonomy_path <- system.file("extdata/ITS2_Rosales_Restricted.tsv",
                             package = "CVrefDB")



# First, execute a 10 fold cross validation (k = 10) on the reference database.

# File where the output will be saved. Here, we save it in the temporary
# " directory"

output_path_10FoldCV <- paste0(tempdir(), "/ITS2_Rosales_Restricted_10FoldsCV.csv")

CV_blastn(fasta_db = fasta_path,
          taxo = taxonomy_path,
          output = output_path_10FoldCV,
          k = 10, # 10-fold cross-validation
          label = "Restricted_10FoldsCV",
          folds_subset = 1:5, # use only on the 5 first folds (just for testing)
          sequences_subset = 1:25, # use only the first 25  sequences in each fold
          folds_remove = TRUE, # should the __Folds__ dir be removed when finished ?
          seed = 123 # use any integer to have replicable results
)

# Read the output files from the disk (NB with real large files, the use of
# faster approaches like `data.table::fread` is recommended)

output_10FoldCV <- read.table(output_path_10FoldCV,
                              header = TRUE, sep =  ";", dec = ",")

# Assign the taxonomy
assigned <- assign_taxonomy(df = output_10FoldCV,
                            taxo = taxonomy_path, # to add the "true" taxon
                            Assignation_method = c("TopHit", "TopHitPlus",
                                                   "TopN", "TopNPlus"),
                            Top_n = 10, # number of top hits to consider
                            Order = NA # skip the Order level
)

# The ouput contains the assigned/predicted taxon (`Taxon`) and real taxon
# (`Taxon_true`) for each query sequence ID, each Method and each taxonomic
# level along with their identity and consensus scores
head(assigned)



# We can now explore this results eg by checking the \% of correct identifications
# for each taxonomic level and each method (NB the missing assignments are
# not counted here as correct identification)
library(dplyr)
assigned \%>\%
    mutate(CorrectID = Taxon == Taxon_true & !is.na(Taxon)) \%>\%
    group_by(Method, Tax_level) \%>\%
    summarize(CorrectID = sum(CorrectID)*100/n())


# We can explore also the relationship between the identity or consensus score
# with the proportion of correct identification
library(ggplot2)

assigned \%>\%
    mutate(CorrectID = Taxon == Taxon_true & !is.na(Taxon)) \%>\%
    filter(Method == "TopHit") \%>\%
    ggplot(aes(y = as.numeric(CorrectID), x = Ident, group = Method)) +
    facet_wrap(~Tax_level, ncol = 4) +
    geom_point(alpha = 0.2,
               position = position_jitter(width = 0, height = 0.05)) +
    stat_smooth(method = "glm", se = FALSE,  method.args = list(family = binomial))+
    ylab("Proportion of correct identification") +
    xlab("Identity score (\%)") +
    theme_bw()

assigned \%>\%
    mutate(CorrectID = Taxon == Taxon_true & !is.na(Taxon)) \%>\%
    filter(Method == "TopHit") \%>\%
    ggplot(aes(y = as.numeric(CorrectID), x = Cons, group = Method)) +
    facet_wrap(~Tax_level, ncol = 4) +
    geom_point(alpha = 0.2,
               position = position_jitter(width = 0, height = 0.05)) +
    stat_smooth(method = "glm", se = FALSE,  method.args = list(family = binomial))+
    ylab("Proportion of correct identification") +
    xlab("Consensus score (\%)") +
    theme_bw()

}
